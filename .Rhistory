source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyBrownianMotion/R/stock_price_explorer.R', echo=TRUE)
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyBrownianMotion/R/stock_price_explorer.R', echo=TRUE)
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyBrownianMotion/R/stock_price_explorer.R', echo=TRUE)
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyBrownianMotion/R/stock_price_explorer.R', echo=TRUE)
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyBrownianMotion/R/stock_price_explorer.R', echo=TRUE)
plot(total_range, total_stock[1,], xlab = "time", ylim = 0:40000, ylab = "DJIA Index", type = "l")
plot(total_range, total_stock[1,], xlab = "time", ylim = c(0,40000), ylab = "DJIA Index", type = "l")
apply(total_stock[2:nsim,], 1, function(x,t) lines(t,x), t = total_range$my_date)
plot(total_range, total_stock[1,], xlab = "time", ylim = c(0,40500), ylab = "DJIA Index", type = "l")
apply(total_stock[2:nsim,], 1, function(x,t) lines(t,x), t = total_range$my_date)
plot(total_range, total_stock[1,], xlab = "time", ylim = c(0,45000), ylab = "DJIA Index", type = "l")
apply(total_stock[2:nsim,], 1, function(x,t) lines(t,x), t = total_range$my_date)
read.csv(data = "data/cd-links-carbon-price.csv")
read.csv(file = "data/cd-links-carbon-price.csv")
carbon_data <- read.csv(file = "data/cd-links-carbon-price.csv")
head(carbon_data)
colnames(carbon_data)
ncol(carbon_dat)
ncol(carbon_data)
plot(carbon_data[1,6:ncol(carbon_data)])
carbon_data[1,6:ncol(carbon_data)]
plot(carbon_data[1,6:ncol(carbon_data)], type = "l")
range(2005,2100,50)
seq(from=2005, to=2100)
seq(from=2005, to=2100, by= "50 years")
seq(from=2005, to=2100, by= "5 years")
seq(from=year(2005), to=y(2100), by= "5 years")
y(2005)
year(2005)
aplly(colnames(carbon_data), substr(1,4))
apply(colnames(carbon_data), substr(1,4))
apply(colnames(carbon_data), 1, substr(1,4))
colnames(carbon_data)
class(colnames(carbon_data))
typof(colnames(carbon_data))
available_years = colnames(carbon_data)[6:ncol(carbon_data)]
available_years = colnames(carbon_data)[6:ncol(carbon_data)]
available_years
lapply(available_years, substring(1,2))
lapply(available_years, substr(1,2))
lapply(available_years, substr(x,1,2))
sapply(available_years, substr(x,1,2))
sapply(available_years, substr(1,2))
sapply(available_years, substr)
sapply(available_years, substr(1,3))
sapply(available_years, function(x,start,stop) substr(x,start,stop), start=1, stop = 3)
sapply(available_years, function(x,start,stop) substr(x,start,stop), start=2, stop = 5)
available_years = sapply(available_years, function(x,start,stop) substr(x,start,stop), start=2, stop = 5)
available_years
available_years = colnames(carbon_data)[6:ncol(carbon_data)] %>%
sapply(function(x,start,stop) substr(x,start,stop), start=2, stop = 5)
available_years
available_years[1]
available_years[,1]
typeof(available_years)
class(available_years)
available_years[,1]
available_years[1]
available_years[2]
plot(available_years, carbon_data[1,6:ncol(carbon_data)], type = "l")
carbon_data[1,6:ncol(carbon_data)]
apply(carbon_data[2:nrow(carbon_data),6:ncol(carbon_data)], 1, function(x,t) lines(t,x), t = available_years)
carbon_data[1,6:ncol(carbon_data)]
carbon_data[2:nrow(carbon_data),6:ncol(carbon_data)]
nrow(carbon_data)
carbon_data[7,]
carbon_data
plot(available_years, carbon_data[1,6:ncol(carbon_data)], type = "l", ylim = c(-5,1400))
apply(carbon_data[2:nrow(carbon_data),6:ncol(carbon_data)], 1, function(x,t) lines(t,x), t = available_years)
plot(available_years, carbon_data[1,6:ncol(carbon_data)], type = "l", ylim = c(-5,1400), ylab = "US$/tC02", xlab = c("years")
)
plot(available_years, carbon_data[1,6:ncol(carbon_data)], type = "l", ylim = c(-5,1400), ylab = "US$/tC02", xlab = c"year")
plot(available_years, carbon_data[1,6:ncol(carbon_data)], type = "l", ylim = c(-5,1400), ylab = "US$/tC02", xlab = "year")
apply(carbon_data[2:nrow(carbon_data),6:ncol(carbon_data)], 1, function(x,t) lines(t,x), t = available_years)
library(tidyverse)
library(tidyquant)
library(bizdays)
library(tidyverse)
list.of.packages <- c("tidyquynt", "bizdays", "tidyverse")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
new.packages
list.of.packages <- c("tidyquant", "bizdays", "tidyverse")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
new.packages
library(tidyquant)
library(bizdays)
library(tidyverse)
tq_index_options()
tq_get_options()
tq_index("DOW")
tq_index("DOW")
stock_data = tq_index("DOW") %>%
tq_get(get = "stock.prices")
djia_stocks = tq_index("DOW") %>%
tq_get(get = "stock.prices")
djia_stocks = tq_index("DOW") %>%
tq_get(get = "stock.prices", from = "2020-01-01")
djia_stocks %>%
group_by(symbol) %>%
tq_transmute(adjusted, mutate_fun = dailyReturn)
djia_stocks
djia_stocks <- djia_stocks %>%
group_by(symbol) %>%
tq_mutate(adjusted, mutate_fun = dailyReturn)
djia_stocks
unique(djia_stocks$sedol)
djia_stocks %>% colnames()
djia_stocks <- djia_stocks %>%
group_by(symbol) %>%
tq_mutate(adjusted, mutate_fun = dailyReturn) %>%
select(c("symbol", "company", "weight", "sector", "date", "adjusted", "daily.returns"))
djia_stocks
djia_stocks = tq_index("DOW") %>%
tq_get(get = "stock.prices", from = "2020-01-01")
djia_stocks <- djia_stocks %>%
group_by(symbol) %>%
tq_mutate(adjusted, mutate_fun = dailyReturn) %>%
select(c("symbol", "company", "weight", "sector", "date", "adjusted", "daily.returns"))
djia:stockSymbols()
dja_stocks
djia_stocks
djia_stocks %>% select("sector")
djia_stocks %>% select("sector") %>% unique()
djia_stocks %>% select("sector") %>% class()
djia_stocks %>% class()
djia_stocks %>% type_of()
djia_stocks_raw = tq_index("DOW") %>%
tq_get(get = "stock.prices", from = "2020-01-01")
djia_stocks <- djia_stocks_raw %>%
group_by(symbol) %>%
tq_mutate(adjusted, mutate_fun = dailyReturn) %>%
select(c("symbol", "company", "weight", "sector", "date", "adjusted", "daily.returns")) %>%
ungroup()
djia_stocks
unique(djia_stocks$sector)
all_sectors = unique(djia_stocks$sector)
read.table(file = "data/owid-co2-data.xls")
read.table(file = "data/owid-co2-data.xlsx")
?read.table
?read.xlsx
list.of.packages <- c("tidyquant", "bizdays", "tidyverse", "readxl")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(readxl)
read_excel(file = "data/owid-co2-data.xlsx")
?read_excel
read_excel(path = "data/owid-co2-data.xlsx")
ghg_data <- read_excel(path = "data/owid-co2-data.xlsx")
ghg_data <- read_excel(path = "data/owid-co2-data.xlsx")
ghg_data
colnames(ghg_data)
ghg_data %>%
filter(country == "USA")
unique(ghg_data$country
)
ghg_data %>%
filter(country == "United States")
all_sectors
carbon_data <- read_csv(file = "data/cd-links-carbon-price.csv")
carbon_data <- read.csv(file = "data/cd-links-carbon-price.csv")
co2_data <- read.csv(file = "data/cw-co2-emissions.csv")
co2_data
carbon_pricec <- read.csv(file = "data/cd-links-carbon-price.csv")
available_years = colnames(carbon_data)[6:ncol(carbon_data)] %>%
sapply(function(x,start,stop) substr(x,start,stop), start=2, stop = 5)
plot(available_years, carbon_data[1,6:ncol(carbon_data)], type = "l", ylim = c(-5,1400), ylab = "US$/tC02", xlab = "year")
apply(carbon_data[2:nrow(carbon_data),6:ncol(carbon_data)], 1, function(x,t) lines(t,x), t = available_years)
ghg_data <- read_excel(path = "data/owid-co2-data.xlsx")
colnames(ghg_data)
co2_data <- read.csv(file = "data/cw-co2-emissions.csv")
colnames(co2_data)
available_years_price = colnames(carbon_data)[6:ncol(carbon_data)] %>%
sapply(function(x,start,stop) substr(x,start,stop), start=2, stop = 5)
plot(available_years_price, carbon_data[1,6:ncol(carbon_data)], type = "l", ylim = c(-5,1400), ylab = "US$/tC02", xlab = "year")
apply(carbon_data[2:nrow(carbon_data),6:ncol(carbon_data)], 1, function(x,t) lines(t,x), t = available_years_price)
available_years_co2 = colnames(carbon_data)[6:ncol(carbon_data)] %>%
sapply(function(x,start,stop) substr(x,start,stop), start=2, stop = 5)
available_years_co2
rm(list=ls())
library(tidyquant)
library(bizdays)
library(tidyverse)
library(readxl)
carbon_price <- read.csv(file = "data/cd-links-carbon-price.csv")
available_years_price = colnames(carbon_price)[6:ncol(carbon_price)] %>%
sapply(function(x,start,stop) substr(x,start,stop), start=2, stop = 5)
plot(available_years_price, carbon_price[1,6:ncol(carbon_data)], type = "l", ylim = c(-5,1400), ylab = "US$/tC02", xlab = "year")
plot(available_years_price, carbon_price[1,6:ncol(carbon_price)], type = "l", ylim = c(-5,1400), ylab = "US$/tC02", xlab = "year")
plot(available_years_price, carbon_price[1,6:ncol(carbon_price)], type = "l", ylim = c(-5,1400), ylab = "US$/tC02", xlab = "year")
apply(carbon_price[2:nrow(carbon_price),6:ncol(carbon_price)], 1, function(x,t) lines(t,x), t = available_years_price)
ghg_data <- read_excel(path = "data/owid-co2-data.xlsx")
ghg_data_us <- ghg_data %>%
filter(country == "United States")
co2_data <- read.csv(file = "data/cw-co2-emissions.csv")
available_years_co2 = colnames(co2_data)[6:ncol(co2_data)] %>%
sapply(function(x,start,stop) substr(x,start,stop), start=2, stop = 5)
head(co2_data)
plot(available_years_co2)
plot(available_years_co2, co2_data[1,3:ncol(co2_data)])
available_years_co2
available_years_co2 = colnames(co2_data)[3:ncol(co2_data)] %>%
sapply(function(x,start,stop) substr(x,start,stop), start=2, stop = 5)
plot(available_years_co2, co2_data[1,3:ncol(co2_data)])
plot(available_years_co2, co2_data[1,3:ncol(co2_data)], type = "l")
plot(available_years_co2, co2_data[1,3:ncol(co2_data)], type = "l", ylim = c(-500, 5800), ylab = "MtCo2e", xlab = "year")
apply(co2_data[2:nrow(co2_data),3:ncol(co2_data)], 1, function(x,t) lines(t,x), t = available_years_co2)
plot(available_years_price, carbon_price[1,6:ncol(carbon_price)], type = "l", ylim = c(-5,1400), ylab = "US$/tC02 per scenario", xlab = "year")
apply(carbon_price[2:nrow(carbon_price),6:ncol(carbon_price)], 1, function(x,t) lines(t,x), t = available_years_price)
plot(available_years_co2, co2_data[1,3:ncol(co2_data)], type = "l", ylim = c(-500, 5800), ylab = "MtCo2e per sector", xlab = "year")
apply(co2_data[2:nrow(co2_data),3:ncol(co2_data)], 1, function(x,t) lines(t,x), t = available_years_co2)
head(co2_data)
all_sectors <- unique(djia_stocks$sector)
djia_stocks_raw = tq_index("DOW") %>%
tq_get(get = "stock.prices", from = "2020-01-01")
all_sectors <- unique(djia_stocks$sector)
djia_stocks <- djia_stocks_raw %>%
group_by(symbol) %>%
tq_mutate(adjusted, mutate_fun = dailyReturn) %>%
select(c("symbol", "company", "weight", "sector", "date", "adjusted", "daily.returns")) %>%
ungroup()
all_sectors <- unique(djia_stocks$sector)
all_sectors
ghg_data_us <- ghg_data %>%
filter(country == "United States") %>%
select(c("country", "year", "co2"))
ghg_data_is
ghg_data_us
ghg_data_us <- ghg_data %>%
filter(country == "United States" & year > 1990) %>%
select(c("country", "year", "co2"))
ghg_data_us
ghg_data_us <- ghg_data %>%
filter(country == "United States" & year >= 1990) %>%
select(c("country", "year", "co2"))
ghg_data_us
ghg_data_us <- ghg_data %>%
filter(country == "United States" & year >= 1990) %>%
select(c("country", "year", "co2", "total_ghg"))
head(co2_data)
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/ShinyBrownianMotion/R/index_explorer.R', echo=TRUE)
plot(total_range, total_stock[1,], xlab = "time", ylim = c(0,45000), ylab = "DJIA Index", type = "l")
apply(total_stock[2:nsim,], 1, function(x,t) lines(t,x), t = total_range$my_date)
plot(available_years_price, carbon_price[1,6:ncol(carbon_price)], type = "l", ylim = c(-5,1400), ylab = "US$/tC02 per scenario", xlab = "year")
apply(carbon_price[2:nrow(carbon_price),6:ncol(carbon_price)], 1, function(x,t) lines(t,x), t = available_years_price)
available_years_co2
plot(available_years_co2, co2_data[1,3:ncol(co2_data)], type = "l", ylim = c(-500, 5800), ylab = "MtCo2 per sector", xlab = "year")
apply(co2_data[2:nrow(co2_data),3:ncol(co2_data)], 1, function(x,t) lines(t,x), t = available_years_co2)
class(ghg_data_us)
carbon:pr
carbon_price
plot(available_years_price, carbon_price[1,6:ncol(carbon_price)], type = "l", ylim = c(-5,1400), ylab = "US$/tC02 per scenario", xlab = "year")
apply(carbon_price[2:nrow(carbon_price),6:ncol(carbon_price)], 1, function(x,t) lines(t,x), t = available_years_price)
my_stock
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/CarbonPriceExplorer/R/dependencies.R', echo=TRUE)
---
title: "Untitled"
output: html_document
---
library(tidyquant)
library(bizdays)
library(tidyverse)
library(readxl)
library(xtable)
library(knitr)
library(rmarkdown)
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/CarbonPriceExplorer/R/stock_index.R', echo=TRUE)
"%!in%" <- function(x,y)!('%in%'(x,y))
source('C:/Users/Sophia/Dropbox/01_studium/04_projects/CarbonPriceExplorer/R/stock_index.R', echo=TRUE)
djia  %>%
select(date, daily.returns)  %>%
filter(date %in% decision_dates)  %>%
inner_join(carbon_policy_event)  %>%
arbon_policy_world <- read_excel(path = "data/climate_policies2.xlsx")
# create highlight tibbles
# for US policy events
highlights1 <- carbon_policy  %>%
mutate(date = Signation_Date)  %>%
inner_join(djia)  %>%
mutate(date = ymd(date), policy_name = Policy_Name)  %>%
select(date, policy_name, adjusted, daily.returns)  %>%
unique()
# for world policy events
highlights2 <- carbon_policy_world  %>%
inner_join(djia)  %>%
mutate(date = ymd(date))  %>%
select(date, policy_name, impact, adjusted, daily.returns)
# plot djia with all events
djia  %>%
select(adjusted, date)  %>%
ggplot(aes(x = date, y = adjusted)) +
geom_line() +
geom_rect(data = highlights2  %>% filter(impact == "progress"),
aes(xmin = (date - 30), xmax = (date + 30), ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.2) +
geom_rect(data = highlights2  %>% filter(impact == "setback"),
aes(xmin = (date - 30), xmax = (date + 30), ymin = -Inf, ymax = Inf),
fill = "orange", alpha = 0.2) +
geom_rect(data = highlights1,
aes(xmin = (date - 30), xmax = (date + 30), ymin = -Inf, ymax = Inf),
fill = "yellow", alpha = 0.2) +
theme_classic()
# compare average daily return on all decision dates
djia  %>%
select(date, daily.returns)  %>%
mutate(in_decision_dates = date %in% highlights1$date |
date %in% highlights2$date)  %>%
group_by(in_decision_dates)  %>%
summarise(return_mean = mean(daily.returns),
return_variance = var(daily.returns))
# show returns on the decision day with name of event
djia  %>%
select(date, daily.returns)  %>%
filter(date %in% decision_dates)  %>%
inner_join(carbon_policy_event)
# plot djia with all events
djia  %>%
select(adjusted, date)  %>%
ggplot(aes(x = date, y = adjusted)) +
geom_line() +
geom_rect(data = highlights2  %>% filter(impact == "progress"),
aes(xmin = (date - 30), xmax = (date + 30), ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.2) +
geom_rect(data = highlights2  %>% filter(impact == "setback"),
aes(xmin = (date - 30), xmax = (date + 30), ymin = -Inf, ymax = Inf),
fill = "orange", alpha = 0.2) +
geom_rect(data = highlights1,
aes(xmin = (date - 30), xmax = (date + 30), ymin = -Inf, ymax = Inf),
fill = "yellow", alpha = 0.2) +
theme_classic()
# for world policy events
highlights2 <- carbon_policy_world  %>%
inner_join(djia)  %>%
mutate(date = ymd(date))  %>%
select(date, policy_name, impact, adjusted, daily.returns)
# show returns on the decision day with name of event
djia  %>%
select(date, daily.returns)  %>%
filter(date %in% decision_dates)  %>%
inner_join(carbon_policy_event)  %>%
### add worldwide policy events: MSCI
# import data
carbon_policy_world <- read_excel(path = "data/climate_policies2.xlsx")
# create highlight tibbles
# for US policy events
highlights1 <- carbon_policy  %>%
mutate(date = Signation_Date)  %>%
inner_join(djia)  %>%
mutate(date = ymd(date), policy_name = Policy_Name)  %>%
select(date, policy_name, adjusted, daily.returns)  %>%
unique()
# for world policy events
highlights2 <- carbon_policy_world  %>%
inner_join(djia)  %>%
mutate(date = ymd(date))  %>%
select(date, policy_name, impact, adjusted, daily.returns)
# for world policy events
highlights2 <- carbon_policy_world  %>%
inner_join(djia)  %>%
mutate(date = ymd(date))  %>%
select(date, policy_name, impact, adjusted, daily.returns)
# plot djia with all events
djia  %>%
select(adjusted, date)  %>%
ggplot(aes(x = date, y = adjusted)) +
geom_line() +
geom_rect(data = highlights2  %>% filter(impact == "progress"),
aes(xmin = (date - 30), xmax = (date + 30), ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.2) +
geom_rect(data = highlights2  %>% filter(impact == "setback"),
aes(xmin = (date - 30), xmax = (date + 30), ymin = -Inf, ymax = Inf),
fill = "orange", alpha = 0.2) +
geom_rect(data = highlights1,
aes(xmin = (date - 30), xmax = (date + 30), ymin = -Inf, ymax = Inf),
fill = "yellow", alpha = 0.2) +
theme_classic()
# for world policy events
highlights2 <- carbon_policy_world  %>%
inner_join(djia)  %>%
mutate(date = ymd(date))  %>%
select(date, policy_name, impact, adjusted, daily.returns)
# show returns on the decision day with name of event
djia  %>%
select(date, daily.returns)  %>%
filter(date %in% decision_dates)  %>%
inner_join(carbon_policy_event)  %>%
### add worldwide policy events: MSCI
# import data
carbon_policy_world <- read_excel(path = "data/climate_policies2.xlsx")
# show returns on the decision day with name of event
djia  %>%
select(date, daily.returns)  %>%
filter(date %in% decision_dates)  %>%
inner_join(carbon_policy_event)  %>%
### add worldwide policy events: MSCI
# import data
carbon_policy_world <- read_excel(path = "data/climate_policies2.xlsx")
carbon_policy_world <- read_excel(path = "data/climate_policies2.xlsx")
# create highlight tibbles
# for US policy events
highlights1 <- carbon_policy  %>%
mutate(date = Signation_Date)  %>%
inner_join(djia)  %>%
mutate(date = ymd(date), policy_name = Policy_Name)  %>%
select(date, policy_name, adjusted, daily.returns)  %>%
unique()
# for world policy events
highlights2 <- carbon_policy_world  %>%
inner_join(djia)  %>%
mutate(date = ymd(date))  %>%
select(date, policy_name, impact, adjusted, daily.returns)
# plot djia with all events
djia  %>%
select(adjusted, date)  %>%
ggplot(aes(x = date, y = adjusted)) +
geom_line() +
geom_rect(data = highlights2  %>% filter(impact == "progress"),
aes(xmin = (date - 30), xmax = (date + 30), ymin = -Inf, ymax = Inf),
fill = "green", alpha = 0.2) +
geom_rect(data = highlights2  %>% filter(impact == "setback"),
aes(xmin = (date - 30), xmax = (date + 30), ymin = -Inf, ymax = Inf),
fill = "orange", alpha = 0.2) +
geom_rect(data = highlights1,
aes(xmin = (date - 30), xmax = (date + 30), ymin = -Inf, ymax = Inf),
fill = "yellow", alpha = 0.2) +
theme_classic()
# compare average daily return on all decision dates
djia  %>%
select(date, daily.returns)  %>%
mutate(in_decision_dates = date %in% highlights1$date |
date %in% highlights2$date)  %>%
group_by(in_decision_dates)  %>%
summarise(return_mean = mean(daily.returns),
return_variance = var(daily.returns))
# show returns on the decision day with name of event
djia  %>%
select(date, daily.returns)  %>%
filter(date %in% decision_dates)  %>%
inner_join(carbon_policy_event)
library(tidyquant)
library(bizdays)
library(tidyverse)
library(readxl)
library(xtable)
library(knitr)
library(rmarkdown)
11000*(2/3) + 12000*(1/3)
(11000*(0.972-0.950)+12000*(1-0.972))/0.05
